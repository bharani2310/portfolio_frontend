{"version":3,"file":"static/js/817.c39062f3.chunk.js","mappings":"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","sources":["components/Projects/Page/projectDescription.js"],"sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { getSingleProject } from '../support';\r\nimport './../../../styles/projectDescription.css'\r\nimport { useNavigate,Link } from \"react-router-dom\";\r\n\r\nconst ProjectDescription = () => {\r\n\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [data, setData] = useState({\r\n        id: \"\",\r\n        pic: \"\",\r\n        project: \"\",\r\n        description: \"\",\r\n        url: \"\",\r\n        overview: \"\",\r\n        features: \"\",\r\n        frontend: \"\",\r\n        backend: \"\",\r\n        database: \"\",\r\n        demo: \"\",\r\n        challenges: \"\",\r\n        deployment: \"\"\r\n      });\r\n      const [spinner,setSpinner]=useState(false)\r\n\r\n      const handleGet = async () => {\r\n        setSpinner(true);\r\n        try {\r\n            const storedProjects = JSON.parse(localStorage.getItem(\"projects\")) || [];\r\n            const foundProject = storedProjects.find(proj => proj._id === id);\r\n            if (foundProject) {\r\n                setData(foundProject); // Use stored data\r\n            } else {\r\n                const result = await getSingleProject(id);\r\n                if (result.success) {\r\n                    localStorage.setItem(\"projects\", JSON.stringify([...storedProjects, result.data]));\r\n                    setData(result.data); // Update state\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching project:\", error);\r\n        } finally {\r\n            setSpinner(false); // Ensure spinner stops\r\n        }\r\n    };\r\n    \r\n    useEffect(() => {\r\n        handleGet();  \r\n    },[]);\r\n\r\n    return (\r\n        <div className='project-Desc'>\r\n            {spinner && (\r\n                  <div className=\"loader-overlay\">\r\n                    <span className=\"loader\"></span>\r\n                  </div>\r\n                )}\r\n            {data.pic && <img className='project-img' src={data.pic}/>}\r\n\r\n            {data.project && <h1 className='main-heading'>{data.project}</h1>}\r\n\r\n            {data.demo && \r\n                <div className=\"video-container\">\r\n                    <iframe src={data.demo} allow=\"autoplay\"  allowFullScreen  title=\"Google Drive Video\" className='video'></iframe>\r\n                </div>}\r\n                        \r\n            {data.description && (\r\n                <>\r\n                    <h2>Project Description :</h2>\r\n                    <p>{data.description}</p>\r\n                </>\r\n            )}\r\n\r\n            {data.overview && (\r\n                <>\r\n                    <h2>Project Overview :</h2>\r\n                    <p>{data.overview}</p>\r\n                </>\r\n            )}\r\n\r\n            {data.features?.length > 0 && (\r\n                <>\r\n                    <h2>Project Features :</h2>\r\n                    <p>{data.features}</p>\r\n                </>\r\n            )}\r\n\r\n            {(data.frontend || data.backend || data.database) && (\r\n                <>\r\n                    <h2>Tech Stack :</h2>\r\n                    <ul>\r\n                        {data.frontend && <li>Frontend : {data.frontend}</li>}\r\n                        {data.backend && <li>Backend : {data.backend}</li>}\r\n                        {data.database && <li>Database : {data.database}</li>}\r\n                    </ul>\r\n                </>\r\n            )}\r\n\r\n            {data.challenges && (\r\n                <>\r\n                    <h2 style={{'margin-top':'2rem'}}>Challenges :</h2>\r\n                    <p>{data.challenges}</p>\r\n                </>\r\n            )}\r\n\r\n            {data.deployment && (\r\n                <>\r\n                    <h2>Deployment :</h2>\r\n                    <p>{data.deployment}</p>\r\n                </>\r\n            )}\r\n            <div className='style-btn'>\r\n                <button className='btn' onClick={() => navigate(-1)}>Back</button>\r\n                {data?.url && <Link to={data?.url} className='btn'>Live</Link>}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProjectDescription"],"names":["ProjectDescription","_data$features","id","useParams","navigate","useNavigate","data","setData","useState","pic","project","description","url","overview","features","frontend","backend","database","demo","challenges","deployment","spinner","setSpinner","useEffect","async","storedProjects","JSON","parse","localStorage","getItem","foundProject","find","proj","_id","result","getSingleProject","success","setItem","stringify","error","console","handleGet","_jsxs","className","children","_jsx","src","allow","allowFullScreen","title","_Fragment","length","style","onClick","Link","to"],"sourceRoot":""}